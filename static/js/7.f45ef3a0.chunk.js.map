{"version":3,"sources":["utils/analytics.js","components/Page.js","views/Error404/Content.js","views/Error404/index.js"],"names":["track","window","gtag","pageview","props","process","REACT_APP_GA_MEASUREMENT_ID","event","type","Page","forwardRef","ref","title","children","rest","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","useEffect","Helmet","useStyles","makeStyles","theme","root","backgroundColor","palette","background","dark","paddingTop","paddingBottom","breakpoints","down","image","perspectiveOrigin","transformStyle","perspective","maxWidth","height","transform","backfaceVisibility","boxShadow","shadows","shape","position","top","left","Content","className","classes","clsx","Container","Grid","container","spacing","Error404"],"mappings":"iJAAA,SAASA,IAAgB,IAAD,EAKfC,OAAOC,OAIZ,EAAAD,QAAOC,KAAP,mBAWW,OACXC,SATJ,SAAkBC,GACdJ,EAAM,SAAUK,gJAAYC,4BAA6BF,IASzDG,MANJ,SAAeC,EAAMJ,GACjBJ,EAAM,QAASQ,EAAMJ,K,uBCPnBK,EAAOC,sBAAW,WAIrBC,GAAS,IAHRC,EAGO,EAHPA,MACAC,EAEO,EAFPA,SACGC,EACI,iBACDC,EAAWC,cAEXC,EAAoBC,uBAAY,WAClClB,EAAMG,SAAS,CACXgB,UAAWJ,EAASK,aAEzB,CAACL,IAMJ,OAJAM,qBAAU,WACNJ,MACD,CAACA,IAGA,uCACIN,IAAKA,GACDG,GAEJ,kBAACQ,EAAA,EAAD,KACI,+BAAQV,IAEXC,MAUEJ,O,uICpCTc,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAK,aACDC,gBAAiBF,EAAMG,QAAQC,WAAWC,KAC1CC,WAAY,IACZC,cAAe,KACdP,EAAMQ,YAAYC,KAAK,MAAQ,CAC5BH,WAAY,GACZC,cAAe,KAGvBG,MAAO,CACHC,kBAAmB,cACnBC,eAAgB,cAChBC,YAAa,KACb,UAAW,CACPC,SAAU,MACVC,OAAQ,OACRC,UAAW,iCACXC,mBAAoB,SACpBC,UAAWlB,EAAMmB,QAAQ,MAGjCC,MAAO,CACHC,SAAU,WACVC,IAAK,EACLC,KAAM,EACN,UAAW,CACPT,SAAU,MACVC,OAAQ,aA8BLS,MAxBf,YAA0C,IAAvBC,EAAsB,EAAtBA,UAAcpC,EAAQ,iBAC/BqC,EAAU5B,IAEhB,OACI,uCACI2B,UAAWE,YAAKD,EAAQzB,KAAMwB,IAC1BpC,GAEJ,kBAACuC,EAAA,EAAD,CAAWd,SAAS,MAChB,kBAACe,EAAA,EAAD,CACIC,WAAS,EACTC,QAAS,GAFb,YC9CVjC,EAAYC,aAAW,iBAAO,CAChCE,KAAM,OAgBK+B,UAbf,WACI,IAAMN,EAAU5B,IAEhB,OACI,kBAACd,EAAA,EAAD,CACIyC,UAAWC,EAAQzB,KACnBd,MAAM,kBAEN,kBAAC,EAAD","file":"static/js/7.f45ef3a0.chunk.js","sourcesContent":["function track(...args) {\n    if (process.env.NODE_ENV !== 'production') {\n        return;\n    }\n\n    if (!window.gtag) {\n        return;\n    }\n\n    window.gtag(...args);\n}\n\nfunction pageview(props) {\n    track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n}\n\nfunction event(type, props) {\n    track('event', type, props);\n}\n\nexport default {\n    pageview,\n    event\n};","import React, {\n    forwardRef,\n    useEffect,\n    useCallback\n} from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport track from '../utils/analytics';\n\nconst Page = forwardRef(({\n    title,\n    children,\n    ...rest\n}, ref) => {\n    const location = useLocation();\n\n    const sendPageViewEvent = useCallback(() => {\n        track.pageview({\n            page_path: location.pathname\n        });\n    }, [location]);\n\n    useEffect(() => {\n        sendPageViewEvent();\n    }, [sendPageViewEvent]);\n\n    return (\n        <div\n            ref={ref}\n            {...rest}\n        >\n            <Helmet>\n                <title>{title}</title>\n            </Helmet>\n            {children}\n        </div>\n    );\n});\n\nPage.propTypes = {\n    children: PropTypes.node,\n    title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n    Container,\n    Grid,\n    makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.dark,\n        paddingTop: 200,\n        paddingBottom: 200,\n        [theme.breakpoints.down('md')]: {\n            paddingTop: 60,\n            paddingBottom: 60\n        }\n    },\n    image: {\n        perspectiveOrigin: 'left center',\n        transformStyle: 'preserve-3d',\n        perspective: 1500,\n        '& > img': {\n            maxWidth: '90%',\n            height: 'auto',\n            transform: 'rotateY(-35deg) rotateX(15deg)',\n            backfaceVisibility: 'hidden',\n            boxShadow: theme.shadows[16]\n        }\n    },\n    shape: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        '& > img': {\n            maxWidth: '90%',\n            height: 'auto'\n        }\n    }\n}));\n\n\nfunction Content({ className, ...rest }) {\n    const classes = useStyles();\n\n    return (\n        <div\n            className={clsx(classes.root, className)}\n            {...rest}\n        >\n            <Container maxWidth=\"lg\">\n                <Grid\n                    container\n                    spacing={3}\n                >\n                    Error\n                </Grid>\n            </Container>\n        </div >\n    );\n}\n\nContent.propTypes = {\n    className: PropTypes.string\n};\n\nexport default Content;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Page from '../../components/Page';\nimport Content from '../Error404/Content';\n\n\nconst useStyles = makeStyles(() => ({\n    root: {}\n}));\n\nfunction Error404() {\n    const classes = useStyles();\n\n    return (\n        <Page\n            className={classes.root}\n            title=\"Alexis | Error\"\n        >\n            <Content />\n        </Page>\n    );\n}\n\nexport default Error404;\n"],"sourceRoot":""}