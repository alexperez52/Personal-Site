{"version":3,"sources":["utils/analytics.js","components/Page.js","views/Home/Contact.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/utils/createSvgIcon.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","views/About/Content.js","views/About/index.js"],"names":["track","window","gtag","pageview","props","process","REACT_APP_GA_MEASUREMENT_ID","event","type","Page","forwardRef","ref","title","children","rest","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","useEffect","Helmet","useStyles","makeStyles","theme","root","backgroundColor","palette","background","default","paddingTop","paddingBottom","avatar","secondary","main","color","contrastText","Features","className","classes","clsx","maxWidth","size","variant","align","style","fontWeight","mt","container","spacing","justify","item","xs","sm","md","display","justifyContent","href","target","rel","alt","width","src","Images","Logo","github","gmail","linkedin","createSvgIcon","path","displayName","Component","React","createElement","SvgIcon","_extends","muiName","memo","d","Avatar","childrenProp","_props$component","component","imgProps","sizes","srcSet","_props$variant","other","_objectWithoutProperties","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","withStyles","position","alignItems","flexShrink","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","name","dark","breakpoints","down","perspectiveOrigin","transformStyle","perspective","transform","backfaceVisibility","boxShadow","shadows","top","left","link","fontWeightBold","Content","Container","Grid","direction","Typography","Hack","Large","hack","sbuhacks","paddingLeft","alignContent","miraflores","hangzhou1","hangzhou2","hangzhou3","shanghai1","shanghai3","About","Contact"],"mappings":"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","file":"static/js/6.6d287198.chunk.js","sourcesContent":["function track(...args) {\n    if (process.env.NODE_ENV !== 'production') {\n        return;\n    }\n\n    if (!window.gtag) {\n        return;\n    }\n\n    window.gtag(...args);\n}\n\nfunction pageview(props) {\n    track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n}\n\nfunction event(type, props) {\n    track('event', type, props);\n}\n\nexport default {\n    pageview,\n    event\n};","import React, {\n    forwardRef,\n    useEffect,\n    useCallback\n} from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport track from '../utils/analytics';\n\nconst Page = forwardRef(({\n    title,\n    children,\n    ...rest\n}, ref) => {\n    const location = useLocation();\n\n    const sendPageViewEvent = useCallback(() => {\n        track.pageview({\n            page_path: location.pathname\n        });\n    }, [location]);\n\n    useEffect(() => {\n        sendPageViewEvent();\n    }, [sendPageViewEvent]);\n\n    return (\n        <div\n            ref={ref}\n            {...rest}\n        >\n            <Helmet>\n                <title>{title}</title>\n            </Helmet>\n            {children}\n        </div>\n    );\n});\n\nPage.propTypes = {\n    children: PropTypes.node,\n    title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Container,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Images from '../../theme/images';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    paddingTop: 0,\n    paddingBottom: 10,\n\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n\n  }\n}));\n\nfunction Features({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Container maxWidth=\"lg\">\n        <hr size=\"2\" />\n        <br></br>\n        <Typography\n          variant=\"h1\"\n          align=\"center\"\n          color=\"textPrimary\"\n          style={{ fontWeight: '600' }}\n        >\n          Connect with me !\n        </Typography>\n        <Box mt={1}>\n          <Grid\n            container\n            spacing={3}\n            justify='center'\n          >\n            <Grid\n              item\n              xs={10}\n              sm={6}\n              md={3}\n\n            >\n              <Box display=\"flex\"\n                justifyContent='space-evenly'\n              >\n                <a href=\"https://github.com/alexperez52\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <Avatar className={classes.avatar}>\n                    <img\n                      alt=\"icon\"\n                      style={{ width: 50 }}\n                      src={Images.Logo.github}></img>\n                  </Avatar>\n                </a>\n                <a target=\"_top\"\n                  rel=\"noopener noreferrer\"\n                  href=\"mailto:alexperez52@gmail.com\">\n                  <Avatar className={classes.avatar}>\n                    <img\n                      alt=\"icon\"\n                      style={{ width: 30 }}\n                      src={Images.Logo.gmail}></img>\n                  </Avatar>\n                </a>\n\n                <a href=\"https://www.linkedin.com/in/alexis-perez-mendoza-2570981a3/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <Avatar className={classes.avatar}>\n                    <img\n                      alt=\"icon\"\n                      style={{ width: 30 }}\n                      src={Images.Logo.linkedin}></img>\n                  </Avatar>\n                </a>\n\n                {/* <a href=\"https://www.instagram.com/alwxz/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  <Avatar className={classes.avatar}>\n                    <img\n                      alt=\"icon\"\n                      style={{ width: 50 }}\n                      src={Images.Logo.instagram}></img>\n                  </Avatar>\n                </a> */}\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </div>\n  );\n}\n\nFeatures.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Features;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = function Component(props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n    Container,\n    Grid,\n    Typography,\n    makeStyles\n} from '@material-ui/core';\nimport Hack from '../../theme/images';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.dark,\n        paddingTop: 50,\n        paddingBottom: 20,\n        [theme.breakpoints.down('md')]: {\n            paddingTop: 60,\n            paddingBottom: 60\n        }\n    },\n    image: {\n        perspectiveOrigin: 'left center',\n        transformStyle: 'preserve-3d',\n        perspective: 1500,\n        '& > img': {\n            maxWidth: '90%',\n            height: 'auto',\n            transform: 'rotateY(-35deg) rotateX(15deg)',\n            backfaceVisibility: 'hidden',\n            boxShadow: theme.shadows[16]\n        }\n    },\n    shape: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        '& > img': {\n            maxWidth: '90%',\n            height: 'auto'\n        }\n    },\n    link: {\n        fontWeight: theme.typography.fontWeightBold,\n        fontSize: 32\n    },\n}));\n\n\nfunction Content({ className, ...rest }) {\n    const classes = useStyles();\n\n    return (\n        <div\n            className={clsx(classes.root, className)}\n            {...rest}\n        >\n            <Container maxWidth=\"lg\">\n                <Grid\n                    container\n                    spacing={5}\n                    direction='column'\n                >\n\n                    <Grid item container md={12} direction='row' justify='space-between'>\n                        <Grid item md={3}>\n                            <Typography\n                                color=\"textPrimary\"\n                                variant=\"h1\"\n                                className={classes.link}\n                            >\n                                Career & Interests\n                        </Typography>\n                            <Typography\n                                variant=\"h3\"\n                                color=\"textSecondary\">\n                                I'm a Computer Science student with an interest in working with\n                                data tooling and micro service development. I really enjoy participating in Hackathons because\n                                of the environment and collaboration. I believe that working together with others is the best way to \n                                learn in this ever-evolving field.\n                        </Typography>\n                        </Grid>\n\n                        <Grid item md={3} align=\"center\" direction='column'>\n                            <img src={Hack.Large.hack} alt=\"Hackathon\" style={{ width: 300, height: 350 }}></img>\n                            <Typography color=\"textSecondary\">\n                                Picture @CEWIT SBU Hackathon\n                            </Typography>\n                            \n                        </Grid>\n                         <Grid item md={3} align=\"center\" direction='column'>\n                            <img src={Hack.Large.sbuhacks} alt=\"Hackathon\" style={{ width: 300, height: 350 }}></img>\n                            <Typography color=\"textSecondary\">\n                                Picture @SBU Hacks\n                            </Typography>\n                            \n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Typography className={classes.link}\n                            fontWeight=\"bold\"\n                            variant=\"h2\"\n                            color=\"textSecondary\"\n                            align='center'>\n                            Below you can find the programming languages and software that I use for development.\n                        </Typography>\n                    </Grid>\n\n                    <Grid item container\n                        direction='row'\n                        md={12}\n                        justify='space-around'>\n\n                        <Grid item direction='column'\n                            md={3}\n                            xs={12}>\n                            <Typography\n                                variant=\"h3\"\n                                color=\"textPrimary\">\n                                Software\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                color=\"textSecondary\">\n                                <ul style={{ paddingLeft: 20 }}>\n                                    <li>\n                                        IntelliJ\n                                    </li>\n\n                                    <li>\n                                        VS Code\n                                    </li>\n\n                                    <li>\n                                        Vim\n                                    </li>\n\n                                    <li>\n                                        Pycharm\n                                    </li>\n                                </ul>\n                            </Typography>\n                        </Grid>\n                        <Grid item direction='column'\n                            md={3}\n                            xs={12}\n                        >\n                            <Typography\n                                variant=\"h3\"\n                                color=\"textPrimary\">\n                                Languages\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                color=\"textSecondary\">\n                                <ul style={{ paddingLeft: 20 }}>\n                                    <li>\n                                        Java\n                                    </li>\n                                    <li>\n                                        Golang\n                                    </li>\n                                    <li>\n                                        Python\n                                    </li>\n\n                                    <li>\n                                        Javascript\n                                    </li>\n\n                                    <li>\n                                        HTML/CSS/XML\n                                    </li>\n                                    <li>\n                                        SQL\n                                    </li>\n                                </ul>\n                            </Typography>\n                        </Grid>\n                        <Grid item direction='column'\n                            md={3}\n                            xs={12}>\n                            <Typography\n                                variant=\"h3\"\n                                color=\"textPrimary\">\n                                Frameworks / Libraries\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                color=\"textSecondary\">\n                                <ul style={{ paddingLeft: 20 }}>\n                                    <li>\n                                        Spring Boot\n                                    </li>\n\n                                    <li>\n                                        React / Redux\n                                    </li>\n\n                                    <li>\n                                        Node JS\n                                    </li>\n                                    <li>\n                                        Scenebuilder\n                                    </li>\n                                    <li>\n                                        Android Studio\n                                    </li>\n                                </ul>\n                            </Typography>\n                        </Grid>\n                        <Grid item direction='column'\n                            md={3}\n                            xs={12}\n                        >\n                            <Typography\n                                variant=\"h3\"\n                                color=\"textPrimary\">\n                                Operating Systems\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                color=\"textSecondary\">\n                                <ul style={{ paddingLeft: 20 }}>\n                                    <li>\n                                        Windows\n                                    </li>\n\n                                    <li>\n                                        Linux\n                                    </li>\n                                    <li>\n                                        MacOS\n                                    </li>\n                                </ul>\n                            </Typography>\n                        </Grid>\n\n\n                    </Grid>\n\n                    <Grid item>\n                    <hr size=\"1\" />\n                    <br></br>\n                        <Typography className={classes.link}\n                            fontWeight=\"bold\"\n                            variant=\"h3\"\n                            color=\"textPrimary\"\n                            align='center'>\n                            Some more about me\n                        </Typography>\n                    </Grid>\n                   \n                        <Typography \n                            variant=\"h3\"\n                            color=\"textSecondary\"\n                            align='center'>\n                            On my free time I like creating and editing Youtube videos. I also enjoy going to the gym \n                            and hanging out with friends. I appreciate good food and cool scenery.\n                            \n                             Here are some pictures of places\n                            that I have traveled to. \n                        </Typography>\n                    <Grid item container md={12} spacing={4} alignContent=\"space-evenly\" justify=\"space-evenly\">\n                   \n                    <Grid item md={4} align=\"center\">\n                    <img src={Hack.Large.miraflores} alt=\"Hackathon\" style={{ width: 300, height: 350 }}></img>\n                    <Typography color=\"textPrimary\">\n                                Miraflores, Peru\n                            </Typography>\n                    </Grid>\n                    <Grid item md={4} align=\"center\">\n                    <img src={Hack.Large.hangzhou1} alt=\"Hackathon\" style={{ width: 300, height: 350 }}></img>\n                    <Typography color=\"textPrimary\">\n                                Hangzhou, China - Mountain top\n                            </Typography>\n                    </Grid>\n                    <Grid item md={4} align=\"center\">\n                    <img src={Hack.Large.hangzhou2} alt=\"Hackathon\" style={{ width: 300, height: 350 }}></img>\n                    <Typography color=\"textPrimary\">\n                                Hangzhou, China - Hotel\n                            </Typography>\n                    </Grid>\n                    <Grid item md={4} align=\"center\">\n                    <img src={Hack.Large.hangzhou3} alt=\"Hackathon\" style={{ width: 300, height: 350 }}></img>\n                    <Typography color=\"textPrimary\">\n                                Hangzhou, China - Attractions\n                            </Typography>\n                    </Grid>\n                    <Grid item md={4} align=\"center\">\n                    <img src={Hack.Large.shanghai1} alt=\"Hackathon\" style={{ width: 300, height: 350 }}></img>\n                    <Typography color=\"textPrimary\">\n                                Shanghai, China - Shanghai Tower\n                            </Typography>\n                    </Grid>\n                \n                    <Grid item md={4} align=\"center\">\n                    <img src={Hack.Large.shanghai3} alt=\"Hackathon\" style={{ width: 300, height: 350 }}></img>\n                    <Typography color=\"textPrimary\">\n                                Hangzhou, China - Boat\n                            </Typography>\n                    </Grid>\n                 \n                </Grid>\n\n                </Grid>\n            </Container>\n        </div >\n    );\n}\n\nContent.propTypes = {\n    className: PropTypes.string\n};\n\nexport default Content;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Page from '../../components/Page';\nimport Content from '../About/Content';\nimport Contact from '../Home/Contact';\n\n\nconst useStyles = makeStyles(() => ({\n    root: {}\n}));\n\nfunction About() {\n    const classes = useStyles();\n\n    return (\n        <Page\n            className={classes.root}\n            title=\"Alexis | About\"\n        >\n            <Content />\n            <Contact />\n        </Page>\n    );\n}\n\nexport default About;\n"],"sourceRoot":""}